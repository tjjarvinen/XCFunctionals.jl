var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = XCFunctionals","category":"page"},{"location":"#XCFunctionals","page":"Home","title":"XCFunctionals","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for XCFunctionals.","category":"page"},{"location":"#Install","page":"Home","title":"Install","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"https://github.com/tjjarvinen/XCFunctionals.jl\")","category":"page"},{"location":"tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"tutorial/#List-all-functionals","page":"Tutorial","title":"List all functionals","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"using XCFunctionals\n\nlist_functionals()","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Search for functionals with specific name","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"list_functionals(\"gga\")","category":"page"},{"location":"tutorial/#Generate-symbolic-represenations-for-functionals","page":"Tutorial","title":"Generate symbolic represenations for functionals","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"xc = generate_functional(\"lda_example\")\nxc.xc","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Derivatives","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"generate_functional_derivatives!(xc, 2)\nprintln(xc.derivatives[1])\nprintln(xc.derivatives[2])","category":"page"},{"location":"tutorial/#Generate-code-for-functionals","page":"Tutorial","title":"Generate code for functionals","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"xc = build_functional(\"lda_example\", 1,2,3)\n\n# First derivative\nxc[1]","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Generate C code","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"xc = build_functional(\"lda_example\", 1,2,3; target=CTarget())\n\n# First derivative\nprint(xc[1])","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Compile Julia code","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"xc = build_functional(\"lda_example\", 1,2,3; compile=true)\n\n# First derivative\nxc[1](1.2)\n\n# Array input\nxc[1].( rand(3) )","category":"page"},{"location":"tutorial/#GPU-calculation","page":"Tutorial","title":"GPU calculation","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Standard broadcasting works with GPUs","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"using Cuda\nρ = rand(3)\nρ_cuda = CuArray(ρ)\nxc[1].( ρ_cuda )","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"using AMDGPU\nρ = rand(3)\nρ_rocm = ROCArray(ρ)\nxc[1].( ρ_rocm )","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"using OneAPI\nρ = rand(3)\nρ_one = oneArray(ρ)\nxc[1].( ρ_one )","category":"page"}]
}
